#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (5, 5, 5)
                double3 target = (-3.978038431995401e-8, -3.978038254359717e-8, 7.95607677517296e-8)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./clock.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
        }
    }
    defaultPrim = "Graphs"
    endTimeCode = 1000000
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 60
    upAxis = "Z"
)

over "Render" (
    hide_in_stage_window = true
)
{
}

def Xform "Graphs"
{
    def OmniGraph "ROS_Clock"
    {
        token evaluationMode = "Automatic"
        token evaluator:type = "execution"
        token fabricCacheBacking = "Shared"
        int2 fileFormatVersion = (1, 9)
        token pipelineStage = "pipelineStageSimulation"

        def OmniGraphNode "on_playback_tick" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            token node:type = "omni.graph.action.OnPlaybackTick"
            int node:typeVersion = 2
            custom double outputs:deltaSeconds
            custom double outputs:frame
            custom uint outputs:tick (
                customData = {
                    bool isExecution = 1
                }
            )
            custom double outputs:time
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (371.8995, 51.82843)
        }

        def OmniGraphNode "ros2_publish_clock" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint64 inputs:context
            prepend uint64 inputs:context.connect = </Graphs/ROS_Clock/ros2_context.outputs:context>
            custom uint inputs:execIn (
                customData = {
                    bool isExecution = 1
                }
            )
            prepend uint inputs:execIn.connect = </Graphs/ROS_Clock/on_playback_tick.outputs:tick>
            custom string inputs:nodeNamespace
            custom string inputs:qosProfile
            custom uint64 inputs:queueSize
            custom double inputs:timeStamp
            prepend double inputs:timeStamp.connect = </Graphs/ROS_Clock/isaac_read_simulation_time.outputs:simulationTime>
            custom string inputs:topicName
            token node:type = "isaacsim.ros2.bridge.ROS2PublishClock"
            int node:typeVersion = 1
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (774, 129)
        }

        def OmniGraphNode "isaac_read_simulation_time" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom bool inputs:resetOnStop
            custom int64 inputs:swhFrameNumber
            token node:type = "isaacsim.core.nodes.IsaacReadSimulationTime"
            int node:typeVersion = 1
            custom double outputs:simulationTime
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (354.81125, 380.6519)
        }

        def OmniGraphNode "ros2_context" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uchar inputs:domain_id
            custom bool inputs:useDomainIDEnvVar
            token node:type = "isaacsim.ros2.bridge.ROS2Context"
            int node:typeVersion = 2
            custom uint64 outputs:context
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (375.48712, 221.34988)
        }
    }
}

